CS130 Project 2 - Design Document
=================================

Please answer all questions in this design document.  Note that the final
feedback section is optional, and you are not required to answer it if you
don't want to.

Unanswered or incompletely answered questions, or answers that don't actually
match the code/repository, will result in deductions.

Answers don't have to be deeply detailed!  We are mainly looking for an
overview or summary description of how your project works, and your team's
experiences working on this project.

Logistics (7 pts)
-----------------

L1.  [2pts] Enumerate all teammates here.

    Cecilia Noble, Sebastian Lamas, Jacob Acosta, Julia Gao


L2.  [2pts] What did each teammate focus on during this project?

    Cecilia - Reordering/copying and saving/loading
    Sebastian - Saving/loading and update cell notifications
    Jacob - Renaming sheets and update cell notifications
    Julia - Reordering/copying and renaming sheets

L3.  [3pts] Approximately how many hours did each teammate spend on the project? 

    Each member spent around 10 hours.



Spreadsheet Engine Design (11 pts)
----------------------------------

D1.  [3pts] Briefly describe how your workbook-loading code operates.  Does
     it do anything sophisticated to optimize the performance of loading a
     workbook, such as deferring cell-value update calculations, or analyzing
     the graph of cell dependencies?


D2.  [4pts] Sheet-level operations like copying a sheet, deleting a sheet,
     renaming a sheet, or even creating a new sheet, can cause cell values
     to be updated.  How does your workbook identify such cells and ensure
     that they are updated properly?


D3.  [4pts] When renaming a sheet, cells with formulas that explicitly
     reference the renamed sheet must be updated with the new sheet name.
     Give an overview of how your implementation updates these formulas.


Informal Design Reviews (16 pts)
--------------------------------

R1.  [4pts] What insights did your team gain regarding the design of *your
     own* spreadsheet engine code?  What parts of your design are you happy
     with?  What parts might require further attention in the future?


R2.  [4pts] Did you feel like you were effective at helping other teams
     assess *their* software designs?  Briefly discuss what went well, and
     what could have gone better, in your interview of another team.


R3.  [4pts] How closely did your team's design match the designs of the
     other teams you talked with?  Briefly discuss significant similaries
     and differences between your team's approach and other teams' approaches.


R4.  [4pts] Which GRASP principles were the most pertinent in your
     discussions?  How much of your discussions referenced the GRASP
     principles?


Performance Analysis (16 pts)
-----------------------------

In this project you must measure and analyze the performance of two central
areas of your spreadsheet engine.  Using pair programming, construct some
performance tests to exercise these aspects of your engine, and use a profiler
to identify where your program is spending the bulk of its time.

A1.  [4pts] Briefly enumerate the performance tests you created to exercise
     your implementation, along with the teammates that collaborated to
     implement each of them.


A2.  [2pts] What profiler did you choose to run your performance tests with?
     Why?  Give an example of how to invoke one of your tests with the profiler.
     
     We chose to run our performance test with the cProfile and then viewing our
     results in snakeviz profile. Donnie mentioned in lecture and it was written in
     the spec so we thought it would be a good profiler to try and run. The command 
     line to run the cProfile is python3 -m cProfile -o profile.unittest tests.stress.


A3.  [6pts] What are ~3 of the most significant hot-spots you identified in your
     performance testing?  Did you expect these hot-spots, or were they
     surprising to you?


A4.  [4pts] Reflect on the experience of pair-programming as you constructed
     these tests.  What went well with it?  What would you like to try to do
     better in the future?


Section F:  CS130 Project 2 Feedback [OPTIONAL]
-----------------------------------------------

These questions are OPTIONAL, and you do not need to answer them.  Your grade
will not be affected by answering or not answering them.  Also, your grade will
not be affected by negative feedback - we want to know what went poorly so that
we can improve future versions of the course.

F1.  What parts of the assignment did you find highly enjoyable?  Conversely,
     what parts of the assignment did you find unenjoyable?


F2.  What parts of the assignment helped you learn more about software
     engineering best-practices, or other useful development skills?
     What parts were not helpful in learning these skills?


F3.  Were there any parts of the assignment that seemed _unnecessarily_ tedious?
     (Some parts of software development are always tedious, of course.)


F4.  Do you have any feedback and/or constructive criticism about how this
     project can be made better in future iterations of CS130?